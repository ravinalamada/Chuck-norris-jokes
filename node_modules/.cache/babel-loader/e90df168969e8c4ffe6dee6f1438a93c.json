{"ast":null,"code":"var _jsxFileName = \"/home/student/Coding/projects/Chuck-norris-jokes/jokes-app/src/containers/FormContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Context } from '../context/GlobalContextProvider';\nimport { Form } from '../component';\nimport categoriesData from '../utils/categoriesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormContainer() {\n  _s();\n\n  const {\n    nameToReplace,\n    category,\n    handleSubmit,\n    setNameToReplace,\n    setCategory,\n    jokesData\n  } = useContext(Context);\n  let buttonLabelName;\n\n  if (nameToReplace) {\n    buttonLabelName = nameToReplace;\n  } else if (jokesData.name) {\n    buttonLabelName = jokesData.name;\n  } else {\n    buttonLabelName = 'Chuck Norris';\n  }\n\n  const [isOpen, setOpen] = useState(false);\n  const [items, setItem] = useState(categoriesData);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const toggleDropdown = () => setOpen(!isOpen);\n\n  const handleItemClick = id => {\n    selectedItem == id ? setSelectedItem(null) : setSelectedItem(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        onClick: toggleDropdown,\n        children: [selectedItem ? items.find(item => item.id == selectedItem).label : 'Select your destination', /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa fa-chevron-right icon ${isOpen && 'open'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-body ${isOpen && 'open'}`,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: e => handleItemClick(e.target),\n          id: item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `dropdown-item-dot ${item.id == selectedItem && 'selected'}`,\n            children: [\"\\u2022\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), item.label]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Fieldset, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"text\",\n        value: nameToReplace,\n        placeholder: \"Impersonate Chuck Norris\",\n        onChange: setNameToReplace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      type: \"submit\",\n      children: [\"Draw a random \", buttonLabelName, \" Joke\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormContainer, \"bcO/+nVC6DGS8VEOKN59T5bYIqY=\");\n\n_c = FormContainer;\nexport default FormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"sources":["/home/student/Coding/projects/Chuck-norris-jokes/jokes-app/src/containers/FormContainer.tsx"],"names":["React","useContext","useState","Context","Form","categoriesData","FormContainer","nameToReplace","category","handleSubmit","setNameToReplace","setCategory","jokesData","buttonLabelName","name","isOpen","setOpen","items","setItem","selectedItem","setSelectedItem","toggleDropdown","handleItemClick","id","find","item","label","map","e","target"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { Context } from '../context/GlobalContextProvider'\nimport { Form } from '../component'\nimport categoriesData from '../utils/categoriesData'\n\nfunction FormContainer() {\n  const {\n    nameToReplace,\n    category,\n    handleSubmit,\n    setNameToReplace,\n    setCategory,\n    jokesData,\n  } = useContext(Context)\n\n  let buttonLabelName: string\n\n  if (nameToReplace) {\n    buttonLabelName = nameToReplace\n  } else if (jokesData.name) {\n    buttonLabelName = jokesData.name\n  } else {\n    buttonLabelName = 'Chuck Norris'\n  }\n\n  const [isOpen, setOpen] = useState(false)\n  const [items, setItem] = useState(categoriesData)\n  const [selectedItem, setSelectedItem] = useState(null)\n\n  const toggleDropdown = () => setOpen(!isOpen)\n\n  const handleItemClick = (id: any) => {\n    selectedItem == id ? setSelectedItem(null) : setSelectedItem(id)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className='dropdown'>\n        <div className='dropdown-header' onClick={toggleDropdown}>\n          {selectedItem\n            ? items.find((item) => item.id == selectedItem).label\n            : 'Select your destination'}\n          <i className={`fa fa-chevron-right icon ${isOpen && 'open'}`}></i>\n        </div>\n        <div className={`dropdown-body ${isOpen && 'open'}`}>\n          {items.map((item) => (\n            <div\n              className='dropdown-item'\n              onClick={(e) => handleItemClick(e.target)}\n              id={item.id}\n              key={item.id}>\n              <span\n                className={`dropdown-item-dot ${\n                  item.id == selectedItem && 'selected'\n                }`}>\n                â€¢{' '}\n              </span>\n              {item.label}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Form.Fieldset>\n        <Form.Input\n          type='text'\n          value={nameToReplace}\n          placeholder='Impersonate Chuck Norris'\n          onChange={setNameToReplace}\n        />\n      </Form.Fieldset>\n      <Form.Button type='submit'>\n        Draw a random {buttonLabelName} Joke\n      </Form.Button>\n    </Form>\n  )\n}\n\nexport default FormContainer\n"]},"metadata":{},"sourceType":"module"}